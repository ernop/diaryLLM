@model TranscriptModel

<h1>@Model.Transcript.Filename</h1>
<br />Transcript ID: @Model.Transcript.Id
<br />Path: @Model.Transcript.TranscriptPath

<br />Recorder: @Model.Transcript.Recorder
<br />Created: @Model.Transcript.CreatedUtc
<br />Updated: @Model.Transcript.UpdatedUtc
<br />Prev: @if (Model.PreviousTranscript != null)
{
    <a class=button href="/transcript/@Model.PreviousTranscript.Id">@Model.PreviousTranscript.Filename (@Model.PreviousTranscript.Content.Length)</a>
}
<br />Next: @if (Model.NextTranscript != null)
{
    <a class=button href="/transcript/@Model.NextTranscript.Id">@Model.NextTranscript.Filename (@Model.NextTranscript.Content.Length)</a>
}

<table>
    <h2>Chunks</h2>
    <table>
        @foreach (var chunk in Model.Transcript.Chunks)
        {
            <tr>
                <td>
                    <h4>Chunk @chunk.Id - Tokens: @Util.Tokenize(chunk.Content)</h4>
                    <div class="mainTranscript">
                        @Html.Raw(Util.Newlineify(chunk.Content))
                    </div>
                    <hr>
                </td>
                <td>
                    @foreach (var query in chunk.Queries.OrderBy(el => el.Kind))
                    {
                        <div class="queryResultBlock">
                            <div class="queryKind">
                                <div class="humanPrompt" title="@query.HumanPrompt">@query.Kind</div>
                                <div class="fullPrompt" title="@query.Prompt">(full)</div>
                                <div class="fullPrompt">@query.Model</div>
                                <div style="display:inline-block;" class="queryDate">
                                    @if (query.CreatedUtc.Date == default(DateTime))
                                    {
                                        
                                    }
                                    else
                                    {
                                        @query.CreatedUtc.ToLocalTime()
                                    }
                                    </div>
                                <a style="display:inline-block;" class="queryDeleteButton button" href="/Query/@query.Id/delete">X</a>

                            </div>
                            <div class="renderedQuery">
                                @Html.Raw(@Util.GetQuery(query.Kind).Render(query.Response))
                            </div>
                        </div>
                    }
                </td>


                <td>
                    <h3>Add Query</h3>
                    <a class="button" href="/dolookup/@chunk.Id/summarize/">Summarize</a>
                    <a class="button" href="/dolookup/@chunk.Id/meta/">Meta</a>
                    <a class="button" href="/dolookup/@chunk.Id/emotions/">Emotions</a>
                    <a class="button" href="/dolookup/@chunk.Id/people/">People</a>
                    <a class="button" href="/dolookup/@chunk.Id/rewrite/">Rewrite</a>
                    <a class="button" href="/dolookup/@chunk.Id/personality/">Personality</a>
                    <a class="button" href="/dolookup/@chunk.Id/objects/">Objects</a>
                    <a class="button" href="/dolookup/@chunk.Id/places/">Places</a>
                    <a class="button" href="/dolookup/@chunk.Id/stories/">Stories</a>
                    <a class="button" href="/dolookup/@chunk.Id/questions/">Questions</a>
                </td>
            </tr>
        }
    </table>

    @foreach (var item in Model.Transcript.TagInstances)
    {
        <tr>
            <td>@item.Tag.Name</td>
        </tr>
    }
</table>

<h2>All Content:</h2>
<br />

@Model.Transcript.Content